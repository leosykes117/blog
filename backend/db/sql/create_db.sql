--
-- Creación de la tabla `USUARIOS`
--
DROP TABLE USUARIOS;
CREATE TABLE USUARIOS (
	ID_USUARIO NUMBER(*),
	EMAIL VARCHAR2(70 BYTE) NOT NULL,
	PASSWORDHASH VARCHAR2(100 BYTE) NOT NULL,
	NOMBRE VARCHAR2(50 BYTE) NOT NULL,
	APELLIDOS VARCHAR2(80 BYTE) NOT NULL,
	GENERO VARCHAR2(1 BYTE) NULL,
	CONSTRAINT USUARIOS_PK PRIMARY KEY (ID_USUARIO),
	CONSTRAINT USUARIOS_EMAIL_UN UNIQUE (EMAIL)
);

COMMENT ON TABLE BLOG_CMS.USUARIOS IS 'Tabla donde se almacenan los usuarios del sistema';


--
-- Creación de la tabla `ARTICULOS`
--
DROP TABLE ARTICULOS;
CREATE TABLE ARTICULOS (
	ID_ARTICULO NUMBER(*, 0),
	TITULO VARCHAR2(50 BYTE) NOT NULL,
	ENLACE_PERSONALIZADO VARCHAR2(25 BYTE) NULL,
	CONTENIDO CLOB NULL,
	ID_USUARIO NUMBER(*, 0) NOT NULL,
	PUBLICADO NUMBER(1, 0) NOT NULL,
	FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP NULL,
	FECHA_MODIFICACION TIMESTAMP NULL,
	CONSTRAINT ARTICULOS_PK PRIMARY KEY (ID_ARTICULO),
	CONSTRAINT ARTICULOS_USUARIOS_FK FOREIGN KEY (ID_USUARIO)
		REFERENCES USUARIOS (ID_USUARIO)
);

COMMENT ON TABLE BLOG_CMS.ARTICULOS IS 'Tabla donde se almacenan los articulos escritos por los usuarios';
COMMENT ON COLUMN BLOG_CMS.ARTICULOS.ID_USUARIO IS 'Autor del articulo. Llave foranea que relaciona el articulo con el usuario';
COMMENT ON COLUMN BLOG_CMS.ARTICULOS.PUBLICADO IS 'Bandera que indica si el artículo se encuentra publicado o en borrador';


--
-- Creación de la tabla `Comentarios`
--
DROP TABLE COMENTARIOS;
CREATE TABLE COMENTARIOS (
	ID_COMENTARIO NUMBER(*, 0),
	COMENTARIO VARCHAR2(255 CHAR),
	ID_USUARIO NUMBER(*, 0) NOT NULL,
	ID_ARTICULO NUMBER(*, 0) NOT NULL,
	FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP NULL,
	CONSTRAINT COMENTARIOS_PK PRIMARY KEY (ID_COMENTARIO),
	CONSTRAINT COMENARIOS_USUARIOS_FK FOREIGN KEY (ID_USUARIO)
		REFERENCES USUARIOS (ID_USUARIO),
	CONSTRAINT COMENTARIOS_ARTICULOS_FK FOREIGN KEY (ID_ARTICULO)
		REFERENCES ARTICULOS(ID_ARTICULO)
);

COMMENT ON TABLE BLOG_CMS.COMENTARIOS IS 'Tabla donde se almacenan los comentarios hechos por los usuarios en los diferentes artículos';
COMMENT ON COLUMN BLOG_CMS.COMENTARIOS.ID_USUARIO IS 'Usuario que escribe el comentarios';
COMMENT ON COLUMN BLOG_CMS.COMENTARIOS.ID_ARTICULO IS 'Indica el artículo donde fue escrito el comentario';


--
-- Creación de la tabla `ACTIVIDAD_USUARIOS`
--
DROP TABLE ACTIVIDAD_USUARIOS;
CREATE TABLE ACTIVIDAD_USUARIOS (
	ID_ARTICULO NUMBER(*, 0) NOT NULL,
	ID_USUARIO NUMBER(*, 0) NOT NULL,
	VISITADO NUMBER(1) NULL,
	FAVORITOS NUMBER(1) NULL,
	MAS_TARDE NUMBER(1) NULL,
	CONSTRAINT ACTIVIDAD_USUARIOS_PK PRIMARY KEY (ID_ARTICULO, ID_USUARIO),
	CONSTRAINT ACTIVIDAD_ARTICULOS_FK FOREIGN KEY (ID_ARTICULO)
		REFERENCES ARTICULOS (ID_ARTICULO),
	CONSTRAINT ACTIVIDAD_USUARIOS_FK FOREIGN KEY (ID_USUARIO)
		REFERENCES USUARIOS (ID_USUARIO)
);

COMMENT ON TABLE BLOG_CMS.ACTIVIDAD_USUARIOS IS 'Tabla que almacena la actividad que tienen los usuarios con los articulos';
COMMENT ON COLUMN BLOG_CMS.ACTIVIDAD_USUARIOS.VISITADO IS 'Bandera que indica si el artículo fue visitado por el usuario';
COMMENT ON COLUMN BLOG_CMS.ACTIVIDAD_USUARIOS.FAVORITOS IS 'Bandera que indica si el usuario agrego el artículo a su sección de favortios';
COMMENT ON COLUMN BLOG_CMS.ACTIVIDAD_USUARIOS.MAS_TARDE IS 'Bandera que indica si el usuario agrego el artículo a su seeción de ver más tarde';


--
-- Creación de la tabla `CATEGORIAS`
--
DROP TABLE CATEGORIAS;
CREATE TABLE CATEGORIAS (
	ID_CATEGORIA NUMBER(*, 0),
	NOMBRE_CATEGORIA VARCHAR2(50) NOT NULL,
	CONSTRAINT CATEGORIAS_PK PRIMARY KEY (ID_CATEGORIA)
);

COMMENT ON TABLE BLOG_CMS.CATEGORIAS IS 'Catálogo que almacena las categorias de los artículos';


--
-- Creación de la tabla `CATEGORIAS_ARTICULO`
--
DROP TABLE CATEGORIAS_ARTICULO;
CREATE TABLE CATEGORIAS_ARTICULO (
	ID_CATEGORIA NUMBER(*, 0) NOT NULL,
	ID_ARTICULO NUMBER(*, 0) NOT NULL,
	NIVEL NUMBER(*, 0) NOT NULL,
	CONSTRAINT CATEGORIAS_ARTICULO_PK PRIMARY KEY (ID_CATEGORIA, ID_ARTICULO),
	CONSTRAINT CATEGORIAS_ARTICULO_CAT_FK FOREIGN KEY (ID_CATEGORIA)
		REFERENCES CATEGORIAS (ID_CATEGORIA),
	CONSTRAINT CATEGORIAS_ARTICULO_ART_FK FOREIGN KEY (ID_ARTICULO)
		REFERENCES ARTICULOS (ID_ARTICULO)
);

COMMENT ON TABLE BLOG_CMS.CATEGORIAS_ARTICULO IS 'Tabla que almacena las categorias ';


--
-- Creación de la tabla `FORMATOS_IMAGENES`
--
DROP TABLE FORMATOS_IMAGENES;
CREATE TABLE FORMATOS_IMAGENES(
	ID_FORMATO NUMBER(2),
	FORMATO VARCHAR2(5 BYTE) NOT NULL,
	CONSTRAINT FORMATOS_IMAGENES_PK PRIMARY KEY (ID_FORMATO), 
	CONSTRAINT FORMATOS_IMAGENES_UN UNIQUE(FORMATO)
);

COMMENT ON TABLE BLOG_CMS.FORMATOS_IMAGENES IS 'Catálogo que almacena la información sobre los tipos de images';


--
-- Creación de la tabla `IMAGENES`
--
DROP TABLE IMAGENES;
CREATE TABLE IMAGENES (
	ID_IMAGEN NUMBER(*, 0),
	LABEL VARCHAR2(20 BYTE) NULL,
	DESCRIPCION VARCHAR2(70 BYTE) NULL,
	NOMBRE_IMAGEN VARCHAR2(1024 BYTE) NOT NULL,
	SIZE_IMAGEN NUMBER(15, 0) NOT NULL,
	UBICACION VARCHAR2(256 BYTE) NOT NULL,
	POSICION NUMBER(1),
	ID_ARTICULO NUMBER(*, 0) NOT NULL,
	ID_FORMATO NUMBER(*, 0) NOT NULL,
	CONSTRAINT IMAGENES_PK PRIMARY KEY (ID_IMAGEN),
	CONSTRAINT IMAGENES_ARTICULOS FOREIGN KEY (ID_ARTICULO)
		REFERENCES ARTICULOS (ID_ARTICULO),
	CONSTRAINT IMAGENES_FORMATO FOREIGN KEY (ID_FORMATO)
		REFERENCES FORMATOS_IMAGENES (ID_FORMATO)
);

COMMENT ON TABLE BLOG_CMS.IMAGENES IS 'Tabla que almacena la imagenes del artículo';



/**** CREACIÓN DE SECUENCIAS ****/

--
-- Creación de la secuencia para el ID de la tabla usuarios (ID_USUARIO_SEQ)
--
CREATE SEQUENCE ID_USUARIO_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 999999999999999999999999
NOCYCLE
NOCACHE
NOORDER;


--
-- Creación de la secuencia para el ID de la tabla artículos ID_ARTICULO_SEQ
--
CREATE SEQUENCE ID_ARTICULO_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 999999999999999999999999
NOCYCLE
NOCACHE
NOORDER;


--
-- Creación de la secuencia para el ID de la tabla comentarios ID_COMENTARIO_SEQ
--
CREATE SEQUENCE ID_COMENTARIO_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 999999999999999999999999
NOCYCLE
NOCACHE
NOORDER;


--
-- Creación de la secuencia para el ID de la tabla categorias ID_CATEGORIA_SEQ
--
CREATE SEQUENCE ID_CATEGORIA_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 999999999999999999999999
NOCYCLE
NOCACHE
NOORDER;


--
-- Creación de la secuencia para el ID de la tabla formatos imagenes ID_FORMATO_SEQ
--
CREATE SEQUENCE ID_FORMATO_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 999999999999999999999999
NOCYCLE
NOCACHE
NOORDER;


--
-- Creación de la secuencia para el ID de la tabla imagenes ID_IMAGEN_SEQ
--
CREATE SEQUENCE ID_IMAGEN_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 999999999999999999999999
NOCYCLE
NOCACHE
NOORDER;



--
-- CREACIÓN DE LOS TRIGGERS PARA AUTOINCREMENTAR LAS SECUENCIAS DE LAS TABLAS
--


--
-- Creación del trigger para aplicar la secuencia ID_USUARIO_SEQ al id de los usuarios (USUARIOS_INSERT_ID)
--
CREATE OR REPLACE TRIGGER USUARIOS_INSERT_ID
	BEFORE INSERT ON USUARIOS
	FOR EACH ROW
BEGIN
	IF INSERTING THEN
		IF :NEW."ID_USUARIO" IS NULL THEN 
			SELECT ID_USUARIO_SEQ.NEXTVAL INTO :NEW."ID_USUARIO" FROM DUAL; 
		END IF;
	END IF;
END;


--
-- Creación del trigger para aplicar la secuencia ID_CATEGORIA_SEQ al ID de las categorias (CATEGORIAS_INSERT_ID)
--
CREATE OR REPLACE TRIGGER CATEGORIAS_INSERT_ID
	BEFORE INSERT ON CATEGORIAS
	FOR EACH ROW
BEGIN
	IF INSERTING THEN
		IF :NEW."ID_CATEGORIA" IS NULL THEN 
			SELECT ID_CATEGORIA_SEQ.NEXTVAL INTO :NEW."ID_CATEGORIA" FROM DUAL; 
		END IF;
	END IF;
END;


--
-- Creación del trigger para aplicar la secuencia ID_FORMATO_SEQ al ID de los formatos de imagenes (FORMATOS_IMAGENES_INSERT_ID)
--
CREATE OR REPLACE TRIGGER FORMATOS_IMAGENES_INSERT_ID
	BEFORE INSERT ON FORMATOS_IMAGENES
	FOR EACH ROW
BEGIN
	IF INSERTING THEN
		IF :NEW."ID_FORMATO" IS NULL THEN 
			SELECT ID_FORMATO_SEQ.NEXTVAL INTO :NEW."ID_FORMATO" FROM DUAL; 
		END IF;
	END IF;
END;


--
-- Creación del trigger para aplicar la secuencia ID_ARTICULO_SEQ al ID de los artículos (ARTICULOS_INSERT_ID)
--
CREATE OR REPLACE TRIGGER ARTICULOS_INSERT_ID
	BEFORE INSERT ON ARTICULOS
	FOR EACH ROW
BEGIN
	IF INSERTING THEN
		IF :NEW."ID_ARTICULO" IS NULL THEN 
			SELECT ID_ARTICULO_SEQ.NEXTVAL INTO :NEW."ID_ARTICULO" FROM DUAL; 
		END IF;
	END IF;
END;


--
-- Creación del trigger para aplicar la secuencia ID_COMENTARIO_SEQ al ID de los comentarios (COMENTARIOS_INSERT_ID)
--
CREATE OR REPLACE TRIGGER COMENTARIOS_INSERT_ID
	BEFORE INSERT ON COMENTARIOS
	FOR EACH ROW
BEGIN
	IF INSERTING THEN
		IF :NEW."ID_COMENTARIO" IS NULL THEN 
			SELECT ID_COMENTARIO_SEQ.NEXTVAL INTO :NEW."ID_COMENTARIO" FROM DUAL; 
		END IF;
	END IF;
END;


--
-- Creación del trigger para aplicar la secuencia ID_IMAGEN_SEQ al ID de las imagenes (IMAGENES_INSERT_ID)
--
CREATE OR REPLACE TRIGGER IMAGENES_INSERT_ID
	BEFORE INSERT ON IMAGENES
	FOR EACH ROW
BEGIN
	IF INSERTING THEN
		IF :NEW."ID_IMAGEN" IS NULL THEN 
			SELECT ID_IMAGEN_SEQ.NEXTVAL INTO :NEW."ID_IMAGEN" FROM DUAL; 
		END IF;
	END IF;
END;


